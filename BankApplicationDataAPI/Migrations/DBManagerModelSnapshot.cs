// <auto-generated />
using System;
using BankApplicationDataAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankApplicationDataAPI.Migrations
{
    [DbContext(typeof(DBManager))]
    partial class DBManagerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("BankApplicationDataAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccountNo")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccountName = "Savings account",
                            AccountNo = 1,
                            Balance = 9998282.0,
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            AccountName = "Current account",
                            AccountNo = 2,
                            Balance = 999882.71999999997,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("LogId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            LogId = 1,
                            Action = "Login",
                            LogMessage = "User logged in",
                            TimeStamp = new DateTime(2024, 10, 2, 21, 15, 18, 519, DateTimeKind.Local).AddTicks(3622)
                        });
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            AccountId = 1,
                            Amount = 8000.0,
                            DateTime = new DateTime(2024, 10, 2, 15, 45, 18, 519, DateTimeKind.Utc).AddTicks(3618),
                            Description = "Funds",
                            Type = "Widthdraw"
                        });
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Phone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Address",
                            Email = "user@gmail.com",
                            IsActive = true,
                            IsAdmin = false,
                            Password = "123456",
                            Phone = 891231231L,
                            UserName = "Test"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Address",
                            Email = "admin@gmail.com",
                            IsActive = true,
                            IsAdmin = true,
                            Password = "123456",
                            Phone = 891231231L,
                            UserName = "Test"
                        });
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.Account", b =>
                {
                    b.HasOne("BankApplicationDataAPI.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.Transaction", b =>
                {
                    b.HasOne("BankApplicationDataAPI.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BankApplicationDataAPI.Models.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
